<launch>

    <arg name="force_torque" default="0" />
    <arg name="auto_cooking_station" default="1" />
    <arg name="sensing_station" default="1" />
    <!-- <arg name="user_input_pcb" default="1" /> -->

    <arg name="cooking_pot_device" default="/dev/cooking_pot" />
    <arg name="auto_cooking_station_device" default="/dev/auto_cooking_station" />
    <arg name="sensing_station_device" default="/dev/sensing_station" />

    <group ns="cooking_pot">
        <rosparam param="device" subst_value="True">$(arg cooking_pot_device)</rosparam>
        <node name="weighing_scale" pkg="sensor_interface" type="weighing_scale.py" output="screen" />
    </group>

    <group ns="auto_cooking_station">
        <rosparam param="device" subst_value="True">$(arg auto_cooking_station_device)</rosparam>
        <node name="weighing_scale" pkg="sensor_interface" type="weighing_scale.py" output="screen" 
            if="$(eval arg('auto_cooking_station') == 1)" />
    </group>

    <group ns="sensing_station">
        <rosparam param="device" subst_value="True">$(arg sensing_station_device)</rosparam>
        <node name="weighing_scale" pkg="sensor_interface" type="weighing_scale.py" output="screen" 
            if="$(eval arg('sensing_station') == 1)" />
    </group>

    <node name="force_torque_publisher" pkg="sensor_interface" type="force_torque_publish.py" output="screen" 
        if="$(eval arg('force_torque') == 1)" />
    <!-- <node name="user_input_pcb" pkg="sensor_interface" type="user_input_pcb.py" output="screen"
        if="$(eval arg('user_input_pcb') == 1)" /> -->

</launch>
